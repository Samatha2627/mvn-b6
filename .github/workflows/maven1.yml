# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: execute py script
      run: |
       print(requests.get('http://34.125.196.119:9000/api/measures/component',auth=HTTPBasicAuth(username="admin", password="admin"), verify=False,params={'component': 'mvn-b6', 'metricKeys': 'code_smells,bugs,vulnerabilities,ncloc,coverage'}).json()) 
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Sonar Project status
      run: curl -u admin:admin http://34.125.196.119:9000/web_api/api/qualitygates/project_status?projectKey=mvn-b6
    - name: Deploy to GitHub
      run: mvn --batch-mode -DuseGitHubPackages=true deploy
      env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
    - name: Tomcat deploy
      run: curl -v -u ${{ secrets.TOM_USERNAME }}:${{ secrets.TOM_PASSWD }} -T /home/runner/work/mvn-b6/mvn-b6/target/flipkart1.war 'http://34.125.112.55:8080/manager/text/deploy?path=/Welcome2'
